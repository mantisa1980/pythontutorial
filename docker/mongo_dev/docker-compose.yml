version: '3'

## Cluster1 itself is a replica set(replSet=cluster1cfg),
## which manages other data replica sets (Cluster1Shard1, Cluster1Shard2 ... )
## 
## Cluster1Shard1 is replica set -> replSet=cluster1:shard1
## Cluster1Shard2 is replica set -> replSet=cluster1:shard2

# to remove volume: "docker volume rm mongo_dev_host-data" or: "docker volume prune" to remove all.
# to list volumes: docker volume ls
volumes:
  mongo-data-001:
  #  driver_opts:
  #    device: /tmp/host-data
  mongo-data-002:
  mongo-data-003:
  mongo-data-clus1-cfgsvr1:
  mongo-data-clus1-cfgsvr2:
  mongo-data-clus1-cfgsvr3:

  # .. then another 20 common volumes

services:
  pig-gs-001-test:
    image: baseserver
    #ports:
    #  - "17017:27018"
    tty: true
    volumes:
      #- mongo-data-001:/data
      - ./:/hostdata  # mount hostDir:containerDir
    networks:
      - backend-network
    hostname: "pig-gs-001-test"
    depends_on:
      - pig-mongo-001-test
      - pig-mongo-002-test
      - pig-mongo-003-test
      - mongo-clus1-cfgsvr1
      - mongo-clus1-cfgsvr2
      - mongo-clus1-cfgsvr3

  pig-mongo-001-test:
    image: mongo
    tty: true
    volumes:
      - ./:/hostdata
    entrypoint: 
      - mongod
      - --shardsvr
      - --replSet
      - clus1:srd1
      - --bind_ip_all
      - --dbpath
      - data
    networks:
      - backend-network
    hostname: "pig-mongo-001-test"

  pig-mongo-002-test:
    image: mongo
    tty: true 
    volumes:
      #- mongo-data-002:/data
      - ./:/hostdata
    entrypoint: 
      - mongod
      - --shardsvr
      - --replSet
      - clus1:srd1
      - --bind_ip_all
      - --dbpath
      - data
    networks:
      - backend-network
    hostname: "pig-mongo-002-test"

  pig-mongo-003-test:
    image: mongo
    tty: true 
    volumes:
      #- mongo-data-003:/data
      - ./:/hostdata
    entrypoint: 
      - mongod
      - --shardsvr
      - --replSet
      - clus1:srd1
      - --bind_ip_all
      - --dbpath
      - data
    networks:
      - backend-network
    hostname: "pig-mongo-003-test"

  mongo-clus1-cfgsvr1:
    image: mongo
    tty: true
    volumes:
      #- mongo-data-clus1-cfgsvr1:/data
      - ./:/hostdata
    entrypoint: 
      - mongod
      - --configsvr
      - --bind_ip_all
      - --replSet
      - clus1cfg
      - --dbpath
      - data
    networks:
      - backend-network
    hostname: "mongo-clus1-cfgsvr1"

  mongo-clus1-cfgsvr2:
    image: mongo
    tty: true
    volumes:
      #- mongo-data-clus1-cfgsvr2:/data
      - ./:/hostdata
    entrypoint: 
      - mongod
      - --configsvr
      - --bind_ip_all
      - --replSet
      - clus1cfg
      - --dbpath
      - data
    networks:
      - backend-network
    hostname: "mongo-clus1-cfgsvr2"

  mongo-clus1-cfgsvr3:
    image: mongo
    tty: true
    volumes:
      #- mongo-data-clus1-cfgsvr3:/data
      - ./:/hostdata
    entrypoint: 
      - mongod
      - --configsvr
      - --bind_ip_all
      - --replSet
      - clus1cfg
      - --dbpath
      - data
    networks:
      - backend-network
    hostname: "mongo-clus1-cfgsvr3"

networks:
  backend-network:
    driver: bridge
  #frontend-network:
  #  driver: bridge

